library("dplyr")    # for some data preperation.
library("entropy")  # calculate entropy.
library("caret")    # for machine learning in R.
library("xgboost")  # using xgboost to train.
library("tidyr")    # data wrangling.
library("ggplot2")  # plot.
df = NULL
for(i in 1:100){
file_name = paste("simu",i,"txt",sep = ".")
dt = read.table(file = file_name,header = TRUE,sep = "\t")
colnames(dt)[-1] <- c("6-complete","1-NA","2-rand","3-global","4-cust","5-dynam")
dt = gather(dt, "class", "rate", 2:7)
df = rbind(df,dt)
}
df %>%
ggplot(aes(x = as.factor(top_n),y = rate,fill=class)) +
geom_boxplot() +
theme_bw() + scale_x_discrete(limits = c(1,2,3,4,5)) +
ggtitle("Comparison between different methods") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Top N") +
ylab("Percentage of Cases (500) within Rank %")
df = NULL
for(i in 1:100){
file_name = paste("simu",i,"txt",sep = ".")
dt = read.table(file = file_name,header = TRUE,sep = "\t")
colnames(dt)[-1] <- c("6-complete","1-NA","2-rand","3-global","4-cust","5-dynam")
dt = gather(dt, "class", "rate", 2:7)
df = rbind(df,dt)
}
df %>%
ggplot(aes(x = as.factor(top_n),y = rate,fill=class)) +
geom_boxplot() +
theme_bw() + scale_x_discrete(limits = c(1,2,3,4,5)) +
ggtitle("Comparison between different methods") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Top N") +
ylab("Percentage of Cases (500) within Rank %")
